extends Node2D

export (PackedScene) var Mob
export (PackedScene) var Bullet
# Declare member variables here. Examples:
# var a = 2
# var b = "text"
var score

# Called when the node enters the scene tree for the first time.
func _ready():
	randomize()

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass





func game_over():
	$ScoreTimer.stop()
	$MobTimer.stop()
	$HUD.show_game_over()
	$DeathSound.play()
	$Music.stop()

func new_game():
	score = 0
	$Player.start($StartPosition.position)
	$StartTimer.start()
	$HUD.update_score(score)
	$HUD.show_message("Get Ready")
	$Music.play()
	





func _on_MobTimer_timeout():
	#Choose random location on Path2D
	$MobPath/MobSpawnLocation.set_offset(randi())
	#Create a mob instance and add it to scene
	var mob = Mob.instance()
	add_child(mob)
	#set mob's direction perpendicular to the path direction
	var direction = $MobPath/MobSpawnLocation.rotation + PI / 2
	#set mob position to random location
	mob.position = $MobPath/MobSpawnLocation.position
	#add randomness to direction
	direction += rand_range(-PI/4, PI/4)
	mob.rotation = direction
	#set velocity (speed and direction)
	mob.linear_velocity = Vector2(rand_range(mob.min_speed, mob.max_speed), 0)
	mob.linear_velocity = mob.linear_velocity.rotated(direction)
	#mob node generated by Main will respond to any start_game signal emitted by the HUD node by running _on_start_game()
# warning-ignore:return_value_discarded
	$HUD.connect("start_game", mob, "_on_start_game")


func _on_ScoreTimer_timeout():
	score += 1
	$HUD.update_score(score)


func _on_StartTimer_timeout():
	$MobTimer.start()
	$ScoreTimer.start()




func _on_Player_shoot():
	var bullet = Bullet.instance()
	bullet.position.x = $Player.position.x 
	bullet.position.y = $Player.position.y
	add_child(bullet)
	
